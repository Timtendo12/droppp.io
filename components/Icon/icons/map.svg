var _path;
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import * as React from "react";
var SvgMap = function SvgMap(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _path || (_path = /*#__PURE__*/React.createElement("path", {
    d: "M23.0794 1.74463C23.0636 1.67987 23.0463 1.61987 23.0185 1.56323C23.0104 1.55409 23.0142 1.54401 23.0084 1.53393C22.9964 1.51518 22.9796 1.50659 22.969 1.49026C22.9268 1.43026 22.8826 1.37651 22.826 1.32995C22.802 1.31221 22.779 1.29878 22.754 1.28096C22.6973 1.24495 22.6393 1.21378 22.5711 1.19268C22.5394 1.18354 22.5082 1.17924 22.476 1.17299C22.4328 1.16534 22.3934 1.14612 22.3498 1.14612C22.3267 1.14612 22.309 1.15815 22.2855 1.16151C22.249 1.16291 22.2149 1.17299 22.1803 1.18213C22.1145 1.19698 22.0536 1.21385 21.9994 1.24502C21.9859 1.2508 21.9739 1.24932 21.9633 1.25651L15.4633 5.04651L8.91414 1.25691C8.90789 1.25402 8.9007 1.25402 8.89445 1.25066C8.8493 1.22714 8.8018 1.20941 8.75383 1.19449C8.72695 1.18683 8.70344 1.18245 8.6761 1.17769C8.64781 1.17339 8.62375 1.16566 8.59688 1.16472C8.5743 1.16378 8.55797 1.15128 8.53399 1.15128C8.51 1.15128 8.49219 1.16378 8.46821 1.16613C8.44039 1.16808 8.41352 1.17378 8.38328 1.17956C8.35352 1.18433 8.32711 1.19011 8.29641 1.20066C8.25945 1.21269 8.22055 1.22949 8.18649 1.24722C8.1711 1.253 8.15672 1.253 8.14422 1.26066L1.25922 5.27266C1.24 5.28367 1.22852 5.30485 1.21024 5.3168C1.15797 5.35281 1.11328 5.39172 1.07156 5.44062C1.03985 5.47664 1.01774 5.51555 0.993281 5.55773C0.969765 5.59617 0.950547 5.635 0.933749 5.67914C0.913125 5.73961 0.903983 5.79961 0.898203 5.86391C0.894844 5.88602 0.884766 5.90375 0.884766 5.92633V22.0835C0.884766 22.0941 0.891016 22.1032 0.891016 22.1138C0.895312 22.1848 0.91164 22.2506 0.932812 22.3216C0.941483 22.3513 0.948671 22.3792 0.963516 22.408C0.974062 22.4296 0.974062 22.4541 0.985626 22.4742C1.00289 22.5025 1.03219 22.5146 1.05141 22.5381C1.09508 22.5947 1.14406 22.6456 1.20258 22.6863C1.24289 22.7175 1.27696 22.7478 1.32305 22.7699C1.39508 22.803 1.47422 22.8193 1.55587 22.8303C1.58704 22.8346 1.61446 22.8538 1.6461 22.8538C1.66532 22.8538 1.68016 22.8418 1.69845 22.8409C1.80454 22.8346 1.90149 22.8058 1.98931 22.7621C2.00274 22.7549 2.01759 22.7578 2.02962 22.7521L8.53262 18.9635L15.0798 22.7521H15.0808C15.098 22.7602 15.1148 22.7602 15.1316 22.7684C15.2127 22.8063 15.3011 22.8303 15.3965 22.8375C15.4186 22.8399 15.4383 22.8538 15.4628 22.8538C15.4815 22.8538 15.4979 22.8409 15.5175 22.8399C15.6164 22.8303 15.7104 22.8059 15.7978 22.7651C15.8112 22.757 15.829 22.7579 15.8415 22.7526C15.8429 22.7526 15.8462 22.7526 15.8477 22.7502L22.7323 18.7384C22.7626 18.722 22.7789 18.6952 22.8058 18.6731C22.847 18.6433 22.8883 18.6106 22.9204 18.5723C22.9531 18.5344 22.9747 18.4974 22.9986 18.4561C23.0275 18.41 23.0472 18.3692 23.0644 18.3198C23.0812 18.2737 23.0879 18.2262 23.0942 18.1777C23.098 18.1445 23.1148 18.1114 23.1148 18.0764L23.1151 1.92042C23.1151 1.90167 23.1059 1.88636 23.1045 1.86909C23.1012 1.82394 23.0887 1.78511 23.0795 1.7448L23.0794 1.74463ZM2.41544 6.36843L7.76984 3.24743V17.6292L2.41544 20.751V6.36843ZM9.34464 3.27423L14.6994 6.37163V20.7572L9.34464 17.6602V3.27423ZM16.2302 6.37023L21.5846 3.25023V17.6324L16.2302 20.7524V6.37023Z",
    fill: "currentColor"
  })));
};
export default SvgMap;